# Docker Compose version 3.8

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: brainity-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: brainity
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./server/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - brainity-network

  # Node.js Backend Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: brainity-server
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 8000
      MONGO_URI: mongodb://admin:password123@mongodb:27017/brainity?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      COOKIE_KEY: your-super-secret-cookie-key-change-in-production
      CLOUDINARY_CLOUD_NAME: your-cloudinary-cloud-name
      CLOUDINARY_API_KEY: your-cloudinary-api-key
      CLOUDINARY_API_SECRET: your-cloudinary-api-secret
      GOOGLE_CLIENT_ID: your-google-oauth-client-id
      GOOGLE_CLIENT_SECRET: your-google-oauth-client-secret
      EMAIL_USER: your-email@gmail.com
      EMAIL_PASS: your-email-app-password
    ports:
      - "8000:8000"
    volumes:
      - ./server/uploads:/app/uploads
    depends_on:
      - mongodb
    networks:
      - brainity-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:8000/', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # React Frontend Client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: brainity-client
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - server
    networks:
      - brainity-network
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_SOCKET_URL=http://localhost:8000

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: brainity-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - client
      - server
    networks:
      - brainity-network
    profiles:
      - production

  # Development Server (override)
  server-dev:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: brainity-server-dev
    profiles:
      - development
    environment:
      NODE_ENV: development
    volumes:
      - ./server:/app
      - /app/node_modules
    command: npm run start-dev
    networks:
      - brainity-network
    depends_on:
      - mongodb

  # Development Client (override)
  client-dev:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: brainity-client-dev
    profiles:
      - development
    volumes:
      - ./client:/app
      - /app/node_modules
    command: npm start
    networks:
      - brainity-network
    depends_on:
      - server-dev

networks:
  brainity-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
